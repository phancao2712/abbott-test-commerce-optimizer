/*! Copyright 2025 Adobe
All Rights Reserved. */
import{jsx as a}from"@dropins/tools/preact-jsx-runtime.js";import{useRef as f,useEffect as A}from"@dropins/tools/preact-compat.js";import{p as P,s as u}from"../chunks/signals.js";import{useText as N}from"@dropins/tools/i18n.js";import"../chunks/state.js";import"@dropins/tools/signals.js";const t="payment-services_apple-pay-container",_=({getCartId:i,isVirtualCart:o,onButtonClick:l,onSuccess:d,onError:c,...p})=>{const e=P.value,s=f(null),r=f(null),{methodNotAvailableMessage:y,methodNotLoadedMessage:v,methodLoadingMessage:h}=N({methodNotAvailableMessage:"PaymentServices.messages.methodNotAvailable",methodNotLoadedMessage:"PaymentServices.messages.methodNotLoaded",methodLoadingMessage:"PaymentServices.messages.methodLoading"});return A(()=>{if(!(e!=null&&e.Payment.ApplePay.isAvailable())||!r.current)return;const m=`apple-pay-${Math.random().toString(36).slice(2,11)}`;r.current.id=m;const g={getCartId:i,onSuccess:d,onError:c,container:`#${m}`,isVirtualCart:async()=>o,onButtonClick:l};return e.Payment.ApplePay.render(g).then(n=>{s.current=n}).catch(n=>{console.error("Apple Pay render failed:",n)}),()=>{s.current&&s.current.teardown()}},[e,i,d,c,o,l]),e&&!e.Payment.ApplePay.isAvailable()?a("div",{ref:r,class:t,children:a("div",{class:"apple-pay-error",children:y})}):u.value==="error"?a("div",{ref:r,class:t,children:a("div",{class:"apple-pay-error",children:v})}):u.value==="initializing"?a("div",{ref:r,class:t,...p,children:a("div",{class:"apple-pay-loading",children:h})}):a("div",{ref:r,class:t,...p})};export{_ as ApplePay,_ as default};
//# sourceMappingURL=ApplePay.js.map
